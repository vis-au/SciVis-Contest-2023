import csv
import pandas as pd
import json 

#DGBCH - Data Generated By Code Here; FOD - Final Output Data; DUAI: Data Used as Input, UF: Unity Folder,
#BF - Bundling Folder
pathDict = {"DGBCH": "C:\\Users\\Vidur\\Desktop\\Bundling Output\\Data Generated By Code Here\\",  \
            "FOD": "C:\\Users\\Vidur\\Desktop\\Bundling Output\\Final Output Data\\", \
            "DUAI": "C:\\Users\\Vidur\\Desktop\\Bundling Output\\Data Used As Input\\", \
            "UF": "C:\\Users\\Vidur\\Desktop\\SciViz\\scivis-contest-2023\\SciVizUnityProject\\Assets\\SciVis\\VizGroup\\Resources\\", \
            "BF": "C:\\Users\\Vidur\\Desktop\\Brain Bundling\\brainbundler\\test\\", \
            "CFP": "Custom File Path"}

#accepts a list or dataframe and writes as csv to output folder
def write_file(data, fileName, inputFileType, OutputFileType, destination):
    if destination != "CFP":
        path = pathDict[destination] + fileName
    else:
        path = fileName
    
    # print("hello", inputFileType, OutputFileType)
    # print(inputFileType == "list", OutputFileType == "csv")
    if inputFileType.strip() == "list" and OutputFileType.strip() == "csv":
        with open(path, mode='w', newline='') as file:
            writer = csv.writer(file)
            writer.writerows(data)

    elif inputFileType == "list" and OutputFileType == "txt":
        with open(path, mode='w', newline='') as file:
            writer = csv.writer(file, delimiter=" ")
            writer.writerows(data)

    elif inputFileType == "pandasDF" and OutputFileType == "csv":
        data.to_csv(path, index=False)
    
    elif inputFileType == "dict" and OutputFileType == "json":
        with open(path, "w") as outfile:
           json.dump(data, outfile)

    else:
        printLine()
        print("requesting unsupported input or output file type")
        print("Input File Type: ", inputFileType)
        print("Output File Type: ", OutputFileType)
        print("Note: Exiting without doing anything")
        printLine()
        return ()

    printLine()
    print("File Written!")
    print("File: ", fileName)
    print("Destination: ", path)
    print("fileType: ", OutputFileType)
    printLine()

def read_file(fileName, inputFileType, outputFileType, path):
    if path != "CFP":
        completePath = pathDict[path] + fileName
    else:
        completePath = fileName
    
    if inputFileType == "csv" and outputFileType == "list":
        with open(completePath, newline='') as fileHandle:
            csvreader = csv.reader(fileHandle)
            data = []    
            # Iterate over each row in the CSV file
            for row in csvreader:
                data.append(row)

    elif inputFileType == "csv" and outputFileType == "pandasDF":
        with open(completePath, newline='') as fileHandle:
            data = pd.read_csv(completePath)
    
    elif inputFileType == "txt" and outputFileType == "list":
        with open(completePath) as fileHandle:
            data = [line.rstrip() for line in fileHandle]
    
    elif inputFileType == "json" and outputFileType == "dict":
        with open(completePath, 'r') as fileHandle: 
            # Reading from json file
            data = json.load(fileHandle)

    else: 
        printLine()
        print("Error, requesting something unsupported")
        print("Input File Type: ", inputFileType)
        print("Output File Type: ", outputFileType)
        print("Note: Exiting without doing anything")
        printLine()
        return()
    
    printLine()
    print ("File read. Data returned")
    print("File: ", fileName)
    print("Path: ", completePath)
    print("Data returned as: ", outputFileType)
    printLine()
 
    return data

def printLine():
    print("________________")